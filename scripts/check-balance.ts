# üîß Guide de D√©ploiement du DEX sur Sepolia - R√âSOLUTION DU PROBL√àME

## üö® Probl√®me : "Circuit breaker is open"

Cette erreur MetaMask signifie que votre provider RPC a trop de requ√™tes ou est bloqu√©.

---

## ‚úÖ SOLUTION COMPL√àTE (√âtape par √©tape)

### √âtape 1 : Configurer un RPC fiable (OBLIGATOIRE)

Le RPC public est souvent surcharg√©. Utilisez **Alchemy** (gratuit et fiable).

#### 1.1 Cr√©er un compte Alchemy

1. Allez sur **https://www.alchemy.com/**
2. Cliquez sur **"Sign Up"** (gratuit)
3. Cr√©ez votre compte
4. Cliquez sur **"Create App"**
5. S√©lectionnez :
   - **Chain**: Ethereum
   - **Network**: Sepolia
   - **Name**: "Blockchain Project DEX"
6. Cliquez sur **"Create App"**

#### 1.2 R√©cup√©rer votre API Key

1. Cliquez sur votre app
2. Cliquez sur **"View Key"**
3. Copiez **"HTTPS"** URL qui ressemble √† :
   ```
   https://eth-sepolia.g.alchemy.com/v2/YOUR_KEY_HERE
   ```

#### 1.3 Mettre √† jour votre .env

Ouvrez (ou cr√©ez) le fichier `.env` et ajoutez :

```env
# Votre cl√© priv√©e MetaMask (sans 0x)
PRIVATE_KEY=votre_cle_privee_64_caracteres

# URL Alchemy Sepolia
SEPOLIA_RPC_URL=https://eth-sepolia.g.alchemy.com/v2/YOUR_KEY_HERE

# API Key Etherscan (optionnel pour la v√©rification)
ETHERSCAN_API_KEY=votre_api_key_etherscan
```

‚ö†Ô∏è **IMPORTANT** : Remplacez `YOUR_KEY_HERE` par votre vraie cl√© Alchemy !

---

### √âtape 2 : V√©rifier votre solde Sepolia ETH

```bash
# Cr√©er un script de v√©rification
```

Cr√©ons un script pour v√©rifier :

<function_calls>
<invoke name="create_file">
<parameter name="content">import { ethers } from "hardhat";

async function main() {
  console.log("\nüí∞ V√©rification du solde Sepolia...\n");

  const [deployer] = await ethers.getSigners();
  
  console.log("üìù Adresse du wallet:", deployer.address);
  
  const balance = await ethers.provider.getBalance(deployer.address);
  const balanceInEth = ethers.formatEther(balance);
  
  console.log("üíµ Solde:", balanceInEth, "ETH");
  
  if (parseFloat(balanceInEth) < 0.01) {
    console.log("\n‚ö†Ô∏è  ATTENTION: Solde insuffisant pour le d√©ploiement!");
    console.log("   Vous avez besoin d'au moins 0.01 ETH pour d√©ployer.");
    console.log("\nüí° Obtenez du Sepolia ETH gratuit ici:");
    console.log("   - https://sepoliafaucet.com");
    console.log("   - https://faucet.quicknode.com/ethereum/sepolia");
    console.log("   - https://www.infura.io/faucet/sepolia");
  } else {
    console.log("\n‚úÖ Solde suffisant pour le d√©ploiement!");
  }
  
  // V√©rifier la connexion r√©seau
  const network = await ethers.provider.getNetwork();
  console.log("\nüåê R√©seau:", network.name, "(Chain ID:", network.chainId.toString(), ")");
  
  // V√©rifier le RPC
  const blockNumber = await ethers.provider.getBlockNumber();
  console.log("üì¶ Dernier bloc:", blockNumber);
  
  console.log("\n‚úÖ Connexion au r√©seau r√©ussie!");
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("\n‚ùå Erreur:");
    console.error(error);
    process.exit(1);
  });
